name: Mise à jour automatique de l'ATIS

on:
  schedule:
    - cron: '22,52 * * * *'  # Exécute chaque heure à 22 et 52 minutes
  workflow_dispatch:  # Permet de lancer manuellement

jobs:
  update-atis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ATIS_TOKEN }}

      - name: Créer un fichier .gitignore
        run: |
          echo "atis_tallinn.mp3" >> .gitignore
          echo "atis_tallinn.txt" >> .gitignore

      - name: Installer les dépendances système
        run: |
          sudo apt update
          sudo apt install -y ffmpeg curl

      - name: Configurer le cache Python
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Installer Whisper (avec cache)
        run: |
          pip install git+https://github.com/openai/whisper.git

      - name: Enregistrer le flux ATIS avec curl et ffmpeg
        run: |
          curl -s -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" \
               -e "https://www.liveatc.net/" \
               "https://s1-fmt2.liveatc.net/eetn2_atis" | \
          ffmpeg -i pipe:0 -t 60 -y atis_tallinn.mp3

      - name: Transcrire l'audio avec Whisper
        run: |
          whisper atis_tallinn.mp3 --model base --language English --output_format txt --output_dir .

      - name: Nettoyer et mettre à jour index.html avec la transcription
        run: |
          if [ -f atis_tallinn.txt ]; then
            transcription=$(cat atis_tallinn.txt | sed ':a;N;$!ba;s/\n/ /g' | sed 's/"/\\"/g' | sed "s/'/\\'/g")
            awk -v trans="$transcription" '{
              if ($0 ~ /<div id="atis-message">.*<\/div>/){
                print "<div id=\"atis-message\"><p>" trans "</p></div>"
              } else {
                print $0
              }
            }' index.html > index_new.html && mv index_new.html index.html
          else
            echo "Le fichier de transcription n'existe pas."
            exit 1
          fi

      - name: Valider et pousser les modifications
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add index.html
          git diff-index --quiet HEAD || git commit -m "Mise à jour automatique de l'ATIS : $(date)"
          git push https://valoch29:${{ secrets.ATIS_TOKEN }}@github.com/valoch29/ReadATIS.git HEAD:main
